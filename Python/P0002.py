"""

    Problem 2:

    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

"""

import time

def sum_of_even_valued_fibonacci_sequence(limit):
    even_numbered_sum = 0
    first = second = head = 1

    while even_numbered_sum < limit:
        head = first + second
        first = second
        second = head

        if head%2 == 0:
            even_numbered_sum += head

    return even_numbered_sum

if __name__ == "__main__":
    starting_time = time.time()

    print(sum_of_even_valued_fibonacci_sequence(limit = 4000000))

    print("\nExecution time: ", float(time.time() - starting_time), " seconds")